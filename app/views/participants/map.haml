=content_for :title do
  Participant Map | MetaCollector 2
=content_for :page_title do
  %i.fa.fa-lg.fa-map
  Participant Map
=content_for :nav do
  =render :partial => 'shared/nav'
=render :partial => 'shared/alert'
.dashboard-block
  =form_tag(map_participant_path(@participant), :method => :get) do
    .input-group.col-xs-6
    
      %input.form-control{name: "date", type:"text", data:{provide:'datepicker', date:{format: "yyyy-mm-dd", autoclose: "true", today:{highlight: "true", btn:"linked"}, end:{date: DateTime.now.in_time_zone("Auckland").to_date}}}, placeholder:"Select date", value:@date}
      %span.input-group-btn
        =button_tag(type:'submit', class:"btn btn-default") do
          Show
        
        
  #map
:javascript
  handler = Gmaps.build('Google');
  handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
    markers = handler.addMarkers(#{raw @hash.to_json });
    fb_markers = handler.addMarkers(#{raw @fb_message_markers.to_json });
    polylines = handler.addPolylines([#{raw @hash.to_json}], { strokeColor: '#FF0000'});
    handler.bounds.extendWith(markers);
    handler.bounds.extendWith(polylines);
    handler.fitMapToBounds();
    
    var oms = new OverlappingMarkerSpiderfier(handler.getMap(), {
      keepSpiderfied: true
      // Other options you need
    });

    // Track each marker with OMS
    _.each(markers, function(marker) {
      oms.addMarker(marker.getServiceObject());
    });
  });